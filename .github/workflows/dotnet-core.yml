name: Build Executables

on:
  push:
    branches: [ master, release/v* ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
      id: extract_branch
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Publish Windows
      id: publish_windows
      run: |
        dotnet publish -f netcoreapp3.1 -c Release -r win-x64 -o ./build/win-x64 -p:PublishSingleFile=true --no-self-contained -v d
        zip --junk-paths ./OpenApi.NetToSpecConsole-win-x64.zip ./build/win-x64/OpenApi.NetToSpecConsole.exe
    - name: Publish Linux
      id: publish_linux
      run: |
        dotnet publish -c Release -r linux-x64 -o ./build/linux-x64 -p:PublishSingleFile=true --no-self-contained -v d
        zip --junk-paths ./OpenApi.NetToSpecConsole-linux-x64.zip ./build/linux-x64/OpenApi.NetToSpecConsole
    - name: Publish OSX
      id: publish_osx
      run: |
        dotnet publish -c Release -r osx-x64 -o ./build/osx-x64 -p:PublishSingleFile=true --no-self-contained -v d
        zip --junk-paths ./OpenApi.NetToSpecConsole-osx-x64.zip ./build/osx-x64/OpenApi.NetToSpecConsole
    - name: Create Release
      if: contains(github.ref, 'release')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_branch.outputs.branch }}
        release_name: Release ${{ steps.extract_branch.outputs.branch }}
        draft: false
        prerelease: false
    - name: Upload Windows Release Asset
      if: contains(github.ref, 'release')
      id: upload-windows-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./OpenApi.NetToSpecConsole-win-x64.zip
        asset_name: OpenApi.NetToSpecConsole-win-x64.zip
        asset_content_type: application/zip
#     - name: Upload Linux Release Asset
#       if: contains(github.ref, 'release')
#       id: upload-linux-release-asset 
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ./OpenApi.NetToSpecConsole-linux-x64.zip
#         asset_name: OpenApi.NetToSpecConsole-linux-x64.zip
#         asset_content_type: application/zip
#     - name: Upload OSX Release Asset
#       if: contains(github.ref, 'release')
#       id: upload-osx-release-asset 
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ./OpenApi.NetToSpecConsole-osx-x64.zip
#         asset_name: OpenApi.NetToSpecConsole-osx-x64.zip
#         asset_content_type: application/zip
